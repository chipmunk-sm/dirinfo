name: CMake

on:
  push:
  pull_request:
  release:
    types: [created]
    
env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Create Version
      id: create_version
      run: |
        echo "Run ID ${{ github.run_id }}"
        echo "Run Number ${{ github.run_number }}"
        
        $gitTagList = git tag --sort=-version:refname
        echo "gitTagList $gitTagList"
        if(0 -lt $gitTagList.Count)
        {
          $LastTag = git describe --tags --first-parent --match "*" "HEAD"
        }
        else
        {
          $LastTag = "v0.0-test_build"
          echo "Tag not found - defaulting to $LastTag"
        }
       
        $delim = ".",";","-","_"
        $srrayStr = @($LastTag -Split {$delim -contains $_})
        $Major = $srrayStr[0] -replace '\D+(\d+)','$1'
        $Minor = $srrayStr[1]
        $artifacts_version="$Major.$Minor.${{ github.run_number }}"
        echo "[$LastTag] => [$artifacts_version]";
        echo "::set-output name=artifacts_version::$artifacts_version"  
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Install
      run: cmake --install ${{github.workspace}}/build --prefix ${{github.workspace}}/build/install

    - name: zip
      run: 7z.exe a "${{github.workspace}}/build/Release/dirinfo.${{ steps.create_version.outputs.artifacts_version }}.zip" "${{github.workspace}}/build/install/*"
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
          name: dirinfo.${{ steps.create_version.outputs.artifacts_version }}
          retention-days: 1
          path: "${{github.workspace}}/build/install/*"
          
    - name: Upload release
      if: ${{ github.event.release.upload_url }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{github.workspace}}/build/Release/dirinfo.${{ steps.create_version.outputs.artifacts_version }}.zip
        asset_name: dirinfo.${{ steps.create_version.outputs.artifacts_version }}.zip
        asset_content_type: application/octet-stream

